// ignore_for_file: camel_case_types, non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class PdfSigLib {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  PdfSigLib(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  PdfSigLib.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void pdf_sign(
    ffi.Pointer<ffi.Int8> in_file,
    ffi.Pointer<ffi.Int8> out_file,
    ffi.Pointer<ffi.Int8> message,
    ffi.Pointer<ffi.Void> pkey,
    ffi.Pointer<ffi.Void> cert,
  ) {
    return _pdf_sign(
      in_file,
      out_file,
      message,
      pkey,
      cert,
    );
  }

  late final _pdf_signPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>>('pdf_sign');
  late final _pdf_sign = _pdf_signPtr.asFunction<
      void Function(
          ffi.Pointer<ffi.Int8>,
          ffi.Pointer<ffi.Int8>,
          ffi.Pointer<ffi.Int8>,
          ffi.Pointer<ffi.Void>,
          ffi.Pointer<ffi.Void>)>();
}
